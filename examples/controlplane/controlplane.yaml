apiVersion: cluster.x-k8s.io/v1alpha2
kind: Machine
metadata:
  name: ${CLUSTER_NAME}-controlplane-0
  labels:
    cluster.x-k8s.io/control-plane: "true"
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
spec:
  version: ${KUBERNETES_VERSION}
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
      kind: KubeadmConfig
      name: ${CLUSTER_NAME}-controlplane-0
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
    kind: BareMetalMachine
    name: ${CLUSTER_NAME}-controlplane-0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
kind: BareMetalMachine
metadata:
  name: ${CLUSTER_NAME}-controlplane-0
spec:
  image:
    url: "http://172.22.0.1/images/rhcos-ootpa-latest.qcow2"
    checksum: "97830b21ed272a3d854615beb54cf004"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
kind: KubeadmConfig
metadata:
  name: ${CLUSTER_NAME}-controlplane-0
spec:
  initConfiguration:
    nodeRegistration:
      name: '{{ ds.meta_data.hostname }}'
      kubeletExtraArgs:
        cloud-provider: baremetal
  clusterConfiguration:
    apiServer:
      extraArgs:
        cloud-provider: baremetal
    controllerManager:
      extraArgs:
        cloud-provider: baremetal
  preKubeadmCommands:
    # Install keepalived
    - yum install -y gcc kernel-headers kernel-devel
    - yum update -y
    - yum install -y keepalived
    # The following two need to run for init
    # If you are joining, move them to postKubeadmCommands
    - systemctl start keepalived
    - systemctl enable keepalived
  postKubeadmCommands:
    - touch /tmp/createdPostkubeam
  files:
    - path: /etc/keepalived/keepalived.conf
      content: |
        ! Configuration File for keepalived
        global_defs {
            notification_email {
            sysadmin@example.com
            support@example.com
            }
            notification_email_from lb@example.com
            smtp_server localhost
            smtp_connect_timeout 30
        }
        vrrp_instance VI_1 {
            state MASTER
            interface eth1
            virtual_router_id 1
            priority 101
            advert_int 1
            virtual_ipaddress {
                192.168.111.249
            }
        }
---
apiVersion: cluster.x-k8s.io/v1alpha2
kind: Machine
metadata:
  name: ${CLUSTER_NAME}-controlplane-1
  labels:
    cluster.x-k8s.io/control-plane: "true"
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
spec:
  version: ${KUBERNETES_VERSION}
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
      kind: KubeadmConfig
      name: ${CLUSTER_NAME}-controlplane-1
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
    kind: BareMetalMachine
    name: ${CLUSTER_NAME}-controlplane-1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
kind: BareMetalMachine
metadata:
  name: ${CLUSTER_NAME}-controlplane-1
spec:
  image:
    url: "http://172.22.0.1/images/rhcos-ootpa-latest.qcow2"
    checksum: "97830b21ed272a3d854615beb54cf004"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
kind: KubeadmConfig
metadata:
  name: ${CLUSTER_NAME}-controlplane-1
spec:
  joinConfiguration:
    controlPlane: {}
    nodeRegistration:
      name: '{{ ds.meta_data.hostname }}'
      kubeletExtraArgs:
        cloud-provider: baremetal
  preKubeadmCommands:
    # Install keepalived
    - yum install -y gcc kernel-headers kernel-devel
    - yum update -y
    - yum install -y keepalived
    - systemctl stop keepalived
  postKubeadmCommands:
    - systemctl start keepalived
    - systemctl enable keepalived
  files:
    - path: /etc/keepalived/keepalived.conf
      content: |
        ! Configuration File for keepalived
        global_defs {
            notification_email {
            sysadmin@example.com
            support@example.com
            }
            notification_email_from lb@example.com
            smtp_server localhost
            smtp_connect_timeout 30
        }
        vrrp_instance VI_1 {
            state MASTER
            interface eth1
            virtual_router_id 2
            priority 101
            advert_int 1
            virtual_ipaddress {
                192.168.111.249
            }
        }
---
apiVersion: cluster.x-k8s.io/v1alpha2
kind: Machine
metadata:
  name: ${CLUSTER_NAME}-controlplane-2
  labels:
    cluster.x-k8s.io/control-plane: "true"
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
spec:
  version: ${KUBERNETES_VERSION}
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
      kind: KubeadmConfig
      name: ${CLUSTER_NAME}-controlplane-2
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
    kind: BareMetalMachine
    name: ${CLUSTER_NAME}-controlplane-2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
kind: BareMetalMachine
metadata:
  name: ${CLUSTER_NAME}-controlplane-2
spec:
  image:
    url: "http://172.22.0.1/images/rhcos-ootpa-latest.qcow2"
    checksum: "97830b21ed272a3d854615beb54cf004"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
kind: KubeadmConfig
metadata:
  name: ${CLUSTER_NAME}-controlplane-2
spec:
  joinConfiguration:
    controlPlane: {}
    nodeRegistration:
      name: '{{ ds.meta_data.hostname }}'
      kubeletExtraArgs:
        cloud-provider: baremetal
  preKubeadmCommands:
    # Install keepalived
    - yum install -y gcc kernel-headers kernel-devel
    - yum update -y
    - yum install -y keepalived
    - systemctl stop keepalived
  postKubeadmCommands:
    - systemctl start keepalived
    - systemctl enable keepalived
  files:
    - path: /etc/keepalived/keepalived.conf
      content: |
        ! Configuration File for keepalived
        global_defs {
            notification_email {
            sysadmin@example.com
            support@example.com
            }
            notification_email_from lb@example.com
            smtp_server localhost
            smtp_connect_timeout 30
        }
        vrrp_instance VI_1 {
            state MASTER
            interface eth1
            virtual_router_id 3
            priority 101
            advert_int 1
            virtual_ipaddress {
                192.168.111.249
            }
        }
